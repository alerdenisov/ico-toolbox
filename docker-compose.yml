version: '2.3'
services:
  mongo: 
    image: healthcheck/mongo
    ports:
      - 27017:27017
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
  frontend:
    image: ${REPO_URL}ico-toolbox/frontend:${TAG}
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    depends_on:
      - user
      - payments
      - sale
    volumes:
      - ./certs:/etc/letsencrypt
      - ./certs/data:/data/letsencrypt
    ports:
      - 80:80
      - 443:443
    restart: on-failure
  user:
    image: ${REPO_URL}ico-toolbox/user:${TAG}
    build:
      context: ./backend
      dockerfile: docker/Dockerfile.user
    env_file: .env
    links:
      - mongo
      - redis
    depends_on:
      mongo:
        condition: service_healthy
    restart: on-failure
  logs:
    image: ${REPO_URL}ico-toolbox/logs:${TAG}
    build:
      context: ./backend
      dockerfile: docker/Dockerfile.logs
    env_file: .env
    links:
      - mongo
      - redis
    depends_on:
      mongo:
        condition: service_healthy
    restart: on-failure
  payments:
    image: ${REPO_URL}ico-toolbox/payments:${TAG}
    build:
      context: ./backend
      dockerfile: docker/Dockerfile.payments
    env_file: .env
    links:
      - mongo
      - redis
    depends_on:
      mongo:
        condition: service_healthy
    restart: on-failure
  sale:
    image: ${REPO_URL}ico-toolbox/sale:${TAG}
    build:
      context: ./backend
      dockerfile: docker/Dockerfile.sale
    env_file: .env
    links:
      - mongo
      - redis
    depends_on:
      mongo:
        condition: service_healthy
    restart: on-failure
  logs:
    image: ${REPO_URL}ico-toolbox/logs:${TAG}
    build:
      context: ./backend
      dockerfile: docker/Dockerfile.logs
    env_file: .env
    links:
      - mongo
      - redis
    depends_on:
      mongo:
        condition: service_healthy
    restart: on-failure
